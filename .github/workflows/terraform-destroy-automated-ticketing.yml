name: Terraform Destroy

on:
  workflow_dispatch:
    inputs:
      target_resource:
        description: 'Specify the resource to target for destruction (e.g., ecr, lambda, etc.)'
        required: true
        default: 'all'
        type: choice
        options:
          - all
          - ecr
          - lambda
          - iam
          - s3

jobs:
  
  terraform_destroy:
    runs-on: ubuntu-latest
    environment: infra-live

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Set up AWS CLI
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set region "us-east-1"

      - name: Terraform Init
        run: terraform init
        working-directory: ./environments/automated-ticketing-and-triage

      - name: Terraform Plan (Destroy)
        run: |
          if [ "${{ github.event.inputs.target_resource }}" == "ecr" ]; then
            terraform plan -destroy -target=aws_ecr_repository.lambda_repo
          elif [ "${{ github.event.inputs.target_resource }}" == "lambda" ]; then
            terraform plan -destroy -target=aws_lambda_function.this
          elif [ "${{ github.event.inputs.target_resource }}" == "iam" ]; then
            terraform plan -destroy -target=aws_iam_role.this
          elif [ "${{ github.event.inputs.target_resource }}" == "s3" ]; then
            terraform plan -destroy -target=aws_s3_bucket.this
          else
            terraform plan -destroy  # Destroy all resources if "all" is selected
          fi
        working-directory: ./environments/automated-ticketing-and-triage

      - name: Terraform Destroy
        run: |
          if [ "${{ github.event.inputs.target_resource }}" == "ecr" ]; then
            terraform destroy -target=aws_ecr_repository.lambda_repo -auto-approve
          elif [ "${{ github.event.inputs.target_resource }}" == "lambda" ]; then
            terraform destroy -target=aws_lambda_function.this -auto-approve
          elif [ "${{ github.event.inputs.target_resource }}" == "iam" ]; then
            terraform destroy -target=aws_iam_role.this -auto-approve
          elif [ "${{ github.event.inputs.target_resource }}" == "s3" ]; then
            terraform destroy -target=aws_s3_bucket.this -auto-approve
          else
            terraform destroy -auto-approve
          fi
        working-directory: ./environments/automated-ticketing-and-triage
